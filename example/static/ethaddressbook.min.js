var ethAddressBook=function(){"use strict";const e=async function(e,t){const r=(new TextEncoder).encode(e),s=(new TextEncoder).encode(t),n=await crypto.subtle.digest("SHA-256",s),o=crypto.getRandomValues(new Uint8Array(12)),a={name:"AES-GCM",iv:o},c=await crypto.subtle.importKey("raw",n,a,!1,["encrypt"]);return{iv:o,encBuffer:await crypto.subtle.encrypt(a,c,r)}},t=async function(e,t,r){const s=(new TextEncoder).encode(r),n=await crypto.subtle.digest("SHA-256",s),o={name:"AES-GCM",iv:t},a=await crypto.subtle.importKey("raw",n,o,!1,["decrypt"]),c=await crypto.subtle.decrypt(o,a,e);return(new TextDecoder).decode(c)},r=function(e){return String.fromCharCode.apply(null,new Uint8Array(e))},s=function(e){const t=new ArrayBuffer(e.length);let r=new Uint8Array(t);for(var s=0,n=e.length;s<n;s++)r[s]=e.charCodeAt(s);return t},n={};var o,a,c,d=[{name:"store_swarm_hash",outputs:[],inputs:[{type:"bytes32",name:"inputPt1"},{type:"bytes32",name:"inputPt2"}],constant:!1,payable:!1,type:"function",gas:70682},{name:"get_swarm_hash",outputs:[{type:"bytes32[2]",name:"out"}],inputs:[{type:"address",name:"_address"}],constant:!0,payable:!1,type:"function",gas:1294},{name:"swarmHash__pt1",outputs:[{type:"bytes32",name:"out"}],inputs:[{type:"address",name:"arg0"}],constant:!0,payable:!1,type:"function",gas:787},{name:"swarmHash__pt2",outputs:[{type:"bytes32",name:"out"}],inputs:[{type:"address",name:"arg0"}],constant:!0,payable:!1,type:"function",gas:823}];return n.setWeb3API=function(e){if(e)switch(e){case"web3":"object"==typeof web3?a="web3":console.log("Unable to set api because 'web3' is not available.");break;case"ethers":"object"==typeof ethers?a="ethers":console.log("Unable to set api because 'ethers' is not available.");break;default:a=null}else"object"==typeof web3?(a="web3",console.log("Web3 api set to 'web3.js'")):"object"==typeof ethers?(a="ethers",console.log("Web3 api set to 'ethers.js'")):console.log("No web3 api found. Please install metamask, web3.js, or ethers.js")},n.setNetwork=async function(e){"3"===e?o="0xe330529D363cBa6f1C1b7A81287026Fe93741736":"4"===e&&(o="0x95275693aF9E7b20F8Dbb7466Bb1652510d93359"),c=function(e,t,r,s){var n;switch(e){case"web3":n=web3.eth.contract(t).at(r);break;case"ethers":switch(s){case"3":n=new ethers.Contract(r,t,ethers.getDefaultProvider("ropsten"));break;case"4":n=new ethers.Contract(r,t,ethers.getDefaultProvider("rinkeby"));break;default:n=new ethers.Contract(r,t,ethers.getDefaultProvider())}}return n}(a,d,o,e),console.log(c)},n.getBook=function(e,r){return fetch("https://swarm-gateways.net/bzz:/"+e,{method:"GET"}).then(e=>e.text()).then(e=>{let n=JSON.parse(e);return!0===n.encrypted?async function(e,r){let n=JSON.parse(e);if(!0===n.encrypted){if(r){let e=new Uint8Array(n.addressBook.iv),a=s(decodeURIComponent(n.addressBook.encBuffer));try{var o=await t(a,e,r)}catch(e){return new Error("Unable to decrypt address book due to either a wrong password or a corrupted address book.")}return o}return new Error("Cannot decrypt addressbook - No password supplied for encrypted address book object.")}return n.addressBook}(e,r):n.addressBook})},n.storeBook=async function(t,s,n){if(!function(e){try{var t=JSON.parse(e)}catch(e){return console.error("Address books must be JSON.stringified() objects."),!1}return Array.isArray(t.addresses)?t.addresses.every(function(e){return"string"==typeof e.label})?!!t.addresses.every(function(e){return web3.isAddress(e.address)})||(console.error("Each address entry must be an object that contains a key named 'address' corresponding to a valid eth address."),!1):(console.error("Each address entry must be an object that contains a key named 'label' corresponding to a string."),!1):(console.error("Address books must have a key named 'addresses' corresponding to an array of address entries."),!1)}(s))throw new Error("Cannot store address book. Please see errors above.");{let o=!1;n&&(o=!0,s=await async function(t,s){let n=await e(t,s);return{iv:JSON.parse("["+n.iv.toString()+"]"),encBuffer:encodeURIComponent(r(n.encBuffer))}}(s,n));const a={encrypted:o,addressBook:s};fetch("https://swarm-gateways.net/bzz:/",{method:"POST",body:JSON.stringify(a)}).then(e=>{if(e.ok)return e.text()}).then(e=>{const r=e.substr(0,32),s=e.substr(32);return async function(e,t,r){return new Promise((s,n)=>c.store_swarm_hash(t,r,{from:e},function(e,t){return e?n(e):t?s(t):void 0}))}(t,r,s)})}},n.getHash=async function(e){return new Promise((t,r)=>c.get_swarm_hash(e,{from:e},function(e,s){if(e)return r(e);if(s){let e=web3.toAscii(s[0])+web3.toAscii(s[1]);return t(e)}}))},n.setWeb3API(),n}();
